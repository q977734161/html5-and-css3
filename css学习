选择器：
	1.属性选择器：
		[attr=val]
		[attr*=val]
		[attr^=val]
		[attr$=val]
		1).[attr=val]：表示如果属性attr的值是val的话就使用该样式；
		2).[attr*=val]：表示如果属性attr的值包含val的话就使用该样式；
		3).[attr^=val]：表示如果属性attr的值是以val开头的话就使用该样式；
		4).[attr$=val]：表示如果属性attr的值是以val结尾的话就使用该样式；

		注意：有些情况下要注意使用"\"转义字符。
			例如：
				<div id="section1-2"></div>

				[id$=\-2]
				{
					....
				}
	2.结构性伪类选择器
		使用方法：
			选择器：伪元素{属性：值}
			或者
			选择器 类名：伪元素{属性：值}
		在css中主要有如下四个伪元素选择器：
			fist-line伪选择器
				用于为某个元素的第一行蚊子使用样式。
			first-letter伪元素选择器
				用于为某个元素中的文字的首字母或者第一个字使用样式。
			before伪元素选择器
				用于在某个元素之前插入一些内容，使用方法：
				<元素>：brefore
				{
					content:插入文字;
					...
				}
				<元素>：brefore
				{
					content:url(test.wav);
					...
				}
			after伪元素选择器
				用于在某个元素之前插入一些内容，使用方法：
				<元素>：after
				{
					content:插入文字;
					font:12px;
					.....
				}
				<元素>：after
				{
					content:url(test.wav);
					...
				}
		选择器root,not,empty和target
			1.root选择器
				root选择器将样式绑定到页面的根元素中。所谓根元素是指位于文档结构树最顶层结构的元素，在html页面中就是指包含着整个页面的"<html>"部分。

				例如：
					<style type="text/css">
					:root
					{
						background-color:yellow;
					}
					body
					{
						background-color:limegreen;
					}
					</style>
					效果为这个页面背景为黄色，body元素的背景色设置为绿色。

					另外，在使用样式指定的root元素与body元素的背景时，根据不同的指定条件，背景显示范围会有所变化。
					例如：
					<style>
					body
					{
						background-color:limegreen;
					}
					</style>
					删除root后背景就为绿色的了。
			2.not选择器
				如果相对某个结构元素使用样式，但是想排除这个结构元素下面的子元素，让它不使用这个样式时，可以使用not选择器。
					例如：
						<style stype='text/css'>
						body *:not(h1)
						{
							background-color:yellow;
						}
						</style>
			3.empty选择器
				用来指定当元素内容为空白时使用的样式。
				<style  type='text/css'>
					:empty{
						background-color:yellow;
					}
				</style>
				<body>
					<table vorder='1' cellpading='0' cellspacing='0'>
						<tr><td>A</td><td>B</td><td>C</td></tr>
						<tr><td>D</td><td>E</td><td></td></tr>
					</table>
				</body>

				运行结果：
					表格第二行最后一个元素背景是黄色的。
			4.target选择器
				对页面中的某个元素（该元素的id被当做页面中的超链接来使用）指定样式，该样式只在用胡点击了页面中的超链接，并且跳转到target元素后起作用。
				<style type='text/css'>
				:target{
					background-color:yellow;
				}
				</style>
				<body>
					<p id="menu">
					<a href="#text1">示例文字1</a>	|
					<a href="#text2">示例文字2</a>	|
					<a href="#text3">示例文字3</a>	|
					<a href="#text4">示例文字4</a>	|
					<a href="#text5">示例文字5</a>	
					</p>
					<div id="text1">
					<h2>示例文字1</h2>
					<p>...此处略去</p>
					</div>

					<div id="text2">
					<h2>示例文字2</h2>
					<p>...此处略去</p>
					</div>

					<div id="text3">
					<h2>示例文字3</h2>
					<p>...此处略去</p>
					</div>

					<div id="text4">
					<h2>示例文字4</h2>
					<p>...此处略去</p>
					</div>

					<div id="text5">
					<h2>示例文字5</h2>
					<p>...此处略去</p>
					</div>
				</body>
				点击链接示例文字1的时候div id="text1"的北京变为黄色。
		选择器：first-child,last-child,nth-child,nth-last-child
			1. 单独指定第一个子元素、最后一个子元素的样式。
				li:first-child{
					background-color:yellow;
				}
				li:last-child{
					background-color:yellow;
				}
			2. 对指定序号的子元素使用样式
				<子元素>:nth-child(n)
				{
					//指定样式
				}
				<子元素>:nth-child{
					//指定样式
				}
			3. 对所有第奇数个子元素或第偶数个子元素使用样式
				nth-child(odd)
				{
					//指定样式
				}
				//所有正数下来的第偶数个子元素
				<子元素>:nth-child(even)
				{
					//指定样式
				}
				//所有正数下来的第奇数个子元素
				<子元素>:nth-child(odd)
				{
					//指定样式
				}
				//所有倒数下来的第偶数个子元素
				<子元素>:nth-last-child(even)
				{
					//指定样式
				}
		选择器:nth-of-type和nth
			1.使用选择器nth-child和nth-last-child是会产生的问题
				nth-child选择器在计算子元素是第奇数个元素还是第偶数个元素的时候，是连同父元素中的所有子元素一起计算的，换句话说就是"h2:nth-child(odd)"这句话的含义，并不是指"针对div元素中第奇数个h2子元素来使用"，而是指"当div元素中的第奇数个子元素如果是h2子元素的时候使用"。
			2.使用选择器nth-of-type和nth-last-of-type
				<style type="text/css">
					h2:nth-of-type(odd)
					{
						background-color:yellow;
					}
					h2:nth-of-type(even)
					{
						background-color:skyblue;
					}
				</style>
		循环使用样式
			只要在"nth-child(n)"语句处，把参数n改为可循环的αn+β的形式就可以。α表示每次循环中包括几种样式，β表示指定的样式在循环中所片的位置，譬如4种北京色作为一组循环：
			<style type='text/css'>
				li:nth-child(4n+1){
					background-color:skyblue;
				}
				li:nth-child(4n+2){
					background-color:limegreen;
				}
				li:nth-child(4n+3){
					background-color:red;
				}
				li:nth-child(4n+4){
					background-color:white;
				}
			</stype>
		only-child选择器
			如果采用如下所示的方法结合运用nth-child选择器与nth-last-child选择器的话，可以指定当某个父元素中只有一个子元素时才使用的样式。
			<子元素>:nth-child(1):nth-last-child(1)
			{
				//指定样式
			}
			使用only-child可以代替nth-child(1):nth-last-child(1)的实现方法。

其他：
	去掉li前面的点
		li{
			list-style-type: none;
		}
